<sprites app="Snap! 9.0, https://snap.berkeley.edu" version="2"><blocks><palette><category name="2048 - Helper Blocks" color="122,0,92,1"/><category name="Autograder" color="9,0,179,1"/><category name="Autograder Utils" color="194,0,51,1"/><category name="tests" color="0,204,13,1"/></palette><block-definition s="error %&apos;msg&apos;" type="command" category="control"><comment x="0" y="0" w="268.6666666666667" collapsed="false">Throw an error.&#xD;&#xD;Makes a red halo appear around the script that runs it,&#xD;with the input text shown in a speech balloon next to&#xD;the script, just like any Snap! error.&#xD;&#xD;This is useful to put in the second script of SAFELY TRY&#xD;after some other instructions to undo the partial work of&#xD;the first script.</comment><header></header><code></code><translations>pt:lança o erro _&#xD;</translations><inputs><input type="%txt"></input></inputs><script><block s="doApplyExtension"><l>err_error(msg)</l><list><block var="msg"/></list></block></script></block-definition><block-definition s="safely try %&apos;action&apos; then if %&apos;error&apos; %&apos;handler&apos;" type="command" category="control"><comment x="0" y="0" w="276" collapsed="false">Catch errors.&#xD;&#xD;Runs the first script.  If it succeeds, nothing else happens.&#xD;But if it has an error (something that would otherwise result&#xD;in a red halo around the block), then the second script is run,&#xD;with the text of the error message that would have been shown in the variable ERROR.</comment><header></header><code></code><translations>pt:tenta executar _ e, em caso de erro _ , executa _&#xD;ca:prova de forma segura _ i si _ _&#xD;</translations><inputs><input type="%cs"></input><input type="%upvar"></input><input type="%cs"></input></inputs><script><block s="doApplyExtension"><l>err_try(cmd, catch, err)</l><list><block var="action"/><block var="handler"/><block var="error"/></list></block><block s="doApplyExtension"><l>err_reset</l><list></list></block></script></block-definition><block-definition s="new board from matrix %&apos;board matrix&apos;" type="reporter" category="2048 - Helper Blocks"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>board</l><l>row</l></list></block><block s="doSetVar"><l>board</l><custom-block s="new board of size %n"><block s="reportListAttribute"><l><option>length</option></l><block var="board matrix"/></block></custom-block></block><block s="doFor"><l>i</l><l>1</l><block s="reportListAttribute"><l><option>length</option></l><block var="board matrix"/></block><script><block s="doSetVar"><l>row</l><block s="reportListItem"><block var="i"/><block var="board matrix"/></block></block><block s="doFor"><l>j</l><l>1</l><block s="reportListAttribute"><l><option>length</option></l><block var="row"/></block><script><custom-block s="set item %n , %n of %l to %n"><block var="i"/><block var="j"/><block var="board"/><block s="reportListItem"><block var="j"/><block var="row"/></block></custom-block></script></block></script></block><block s="doReport"><block var="board"/></block></script></block-definition><block-definition s="new board of size %&apos;n&apos;" type="reporter" category="2048 - Helper Blocks"><comment x="0" y="0" w="89.99999999999996" collapsed="false">This creates a new empty board of n by n tiles</comment><header></header><code></code><translations></translations><inputs><input type="%n">4</input></inputs><script><block s="doReport"><block s="reportReshape"><block s="reportNewList"><list><l>0</l></list></block><list><block var="n"/><block var="n"/></list></block></block></script></block-definition><block-definition s="set item %&apos;row&apos; , %&apos;col&apos; of %&apos;board&apos; to %&apos;value&apos;" type="command" category="2048 - Helper Blocks"><comment x="0" y="0" w="89.99999999999996" collapsed="false">This is just like the REPLACE block, but for our game board. You don&apos;t need to know how it works.</comment><header></header><code></code><translations></translations><inputs><input type="%n"></input><input type="%n"></input><input type="%l"></input><input type="%n"></input></inputs><script><block s="doReplaceInList"><block var="col"/><block s="reportListItem"><block var="row"/><block var="board"/></block><block s="reportIfElse"><block s="reportVariadicEquals"><list><block var="value"/><l></l></list></block><l>0</l><block var="value"/></block></block></script></block-definition><block-definition s="new 4x4 board $nl %&apos;A&apos; %&apos;B&apos; %&apos;C&apos; %&apos;D&apos; $nl %&apos;E&apos; %&apos;F&apos; %&apos;G&apos; %&apos;H&apos; $nl %&apos;M&apos; %&apos;N&apos; %&apos;O&apos; %&apos;P&apos; $nl %&apos;Q&apos; %&apos;R&apos; %&apos;S&apos; %&apos;T&apos;" type="reporter" category="2048 - Helper Blocks"><header></header><code></code><translations></translations><inputs><input type="%n"></input><input type="%n"></input><input type="%n"></input><input type="%n"></input><input type="%n"></input><input type="%n"></input><input type="%n"></input><input type="%n"></input><input type="%n"></input><input type="%n"></input><input type="%n"></input><input type="%n"></input><input type="%n"></input><input type="%n"></input><input type="%n"></input><input type="%n"></input></inputs><script><block s="doReport"><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><block var="A"/><block var="B"/><block var="C"/><block var="D"/></list></block><block s="reportNewList"><list><block var="E"/><block var="F"/><block var="G"/><block var="H"/></list></block><block s="reportNewList"><list><block var="M"/><block var="N"/><block var="O"/><block var="P"/></list></block><block s="reportNewList"><list><block var="Q"/><block var="R"/><block var="S"/><block var="T"/></list></block></list></block></custom-block></block></script></block-definition><block-definition s="all of %&apos;preds&apos;" type="predicate" category="operators"><comment x="0" y="0" w="248" collapsed="false">Takes any number of Boolean (true/false) inputs (use the left and right arrowheads to adjust the number of input slots) and reports TRUE only if all of the inputs are TRUE, otherwise FALSE.  Like AND but for multiple inputs.</comment><header></header><code></code><translations>pt:todas as afirmações _ são verdadeiras&#xD;ca:tots _ ?&#xD;</translations><inputs><input type="%mult%boolUE"></input></inputs><script><block s="doIf"><block s="reportListIsEmpty"><block var="preds"/></block><script><block s="doReport"><block s="reportBoolean"><l><bool>true</bool></l></block></block></script><list></list></block><block s="doReport"><block s="reportVariadicAnd"><list><block s="evaluate"><block s="reportListItem"><l>1</l><block var="preds"/></block><list></list></block><custom-block s="all of %mult%boolUE"><block s="reportCDR"><block var="preds"/></block></custom-block></list></block></block></script></block-definition></blocks><sprite name="autograder(2)" idx="0" x="1.9139262855876495" y="-2.653718825866065" heading="90" scale="1" volume="100" pan="0" rotation="1" draggable="true" costume="0" color="80,80,80,1" pen="tip" id="2"><costumes><list struct="atomic" id="3"></list></costumes><sounds><list struct="atomic" id="4"></list></sounds><blocks><block-definition s="set up autograder" type="command" category="Autograder"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doDeclareVariables"><list><l>run HOFs tests?</l><l>blocks</l></list></block><block s="doSetVar"><l>blocks</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>student</l><block s="reportNewList"><list></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doForEach"><l>item</l><block s="reportNewList"><list><l>add 2 or 4 to _</l><l>rotate _ clockwise</l><l>merge up column _ of _</l><l>merge up _</l><l>no moves left for _ ?</l></list></block><script><block s="doAddToList"><custom-block s="get block %txt" scope="local"><block var="item"/></custom-block><block var="student"/></block></script></block><block s="doSetVar"><l>run HOFs tests?</l><block s="reportBoolean"><l><bool>true</bool></l></block></block></script><l>error</l><script><block s="doSetVar"><l>run HOFs tests?</l><block s="reportBoolean"><l><bool>false</bool></l></block></block></script></custom-block><custom-block s="set 2 or 4 randomness %s" scope="local"><block s="reportListItem"><l>1</l><block var="student"/></block></custom-block><block s="doSetVar"><l>tests</l><block s="reportNewList"><list><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="1. Add 2 or 4" scope="local"></custom-block></autolambda><list></list></block><l>1.5</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="2. Add 2 or 4" scope="local"></custom-block></autolambda><list></list></block><l>1.5</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="3. Add 2 or 4" scope="local"></custom-block></autolambda><list></list></block><l>1.5</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="4. Add 2 or 4" scope="local"></custom-block></autolambda><list></list></block><l>1.5</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="1. Rotate Clockwise %s" scope="local"><block s="reportListItem"><l>2</l><block var="student"/></block></custom-block></autolambda><list></list></block><l>1.5</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="2. Rotate Clockwise %s" scope="local"><block s="reportListItem"><l>2</l><block var="student"/></block></custom-block></autolambda><list></list></block><l>1.5</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="3. Rotate Clockwise %s" scope="local"><block s="reportListItem"><l>2</l><block var="student"/></block></custom-block></autolambda><list></list></block><l>1.5</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="4. Rotate Clockwise %s" scope="local"><block s="reportListItem"><l>2</l><block var="student"/></block></custom-block></autolambda><list></list></block><l>1.5</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="1. Merge Up Column %s" scope="local"><block s="reportListItem"><l>3</l><block var="student"/></block></custom-block></autolambda><list></list></block><l>1.8</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="2. Merge Up Column %s" scope="local"><block s="reportListItem"><l>3</l><block var="student"/></block></custom-block></autolambda><list></list></block><l>1.8</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="3. Merge Up Column %s" scope="local"><block s="reportListItem"><l>3</l><block var="student"/></block></custom-block></autolambda><list></list></block><l>1.8</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="4. Merge Up Column %s" scope="local"><block s="reportListItem"><l>3</l><block var="student"/></block></custom-block></autolambda><list></list></block><l>3</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="5. Merge Up Column %s" scope="local"><block s="reportListItem"><l>3</l><block var="student"/></block></custom-block></autolambda><list></list></block><l>3</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="6. Merge Up Column %s" scope="local"><block s="reportListItem"><l>3</l><block var="student"/></block></custom-block></autolambda><list></list></block><l>1.8</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="7. Merge Up Column %s" scope="local"><block s="reportListItem"><l>3</l><block var="student"/></block></custom-block></autolambda><list></list></block><l>1.8</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="1. Merge Up %s" scope="local"><block s="reportListItem"><l>4</l><block var="student"/></block></custom-block></autolambda><list></list></block><l>1.5</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="2. Merge Up %s" scope="local"><block s="reportListItem"><l>4</l><block var="student"/></block></custom-block></autolambda><list></list></block><l>1.5</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="3. Merge Up %s" scope="local"><block s="reportListItem"><l>4</l><block var="student"/></block></custom-block></autolambda><list></list></block><l>1.5</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="4. Merge Up %s" scope="local"><block s="reportListItem"><l>4</l><block var="student"/></block></custom-block></autolambda><list></list></block><l>1.5</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="1. No Moves Left %s" scope="local"><block s="reportListItem"><l>5</l><block var="student"/></block></custom-block></autolambda><list></list></block><l>1.5</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="2. No Moves Left %s" scope="local"><block s="reportListItem"><l>5</l><block var="student"/></block></custom-block></autolambda><list></list></block><l>1.5</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="3. No Moves Left %s" scope="local"><block s="reportListItem"><l>5</l><block var="student"/></block></custom-block></autolambda><list></list></block><l>1.5</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="4. No Moves Left %s" scope="local"><block s="reportListItem"><l>5</l><block var="student"/></block></custom-block></autolambda><list></list></block><l>1.5</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="1. Testing Block %s" scope="local"><block var="GRADED TESTS"/></custom-block></autolambda><list></list></block><l>1.5</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="2. Testing Block %s" scope="local"><block var="GRADED TESTS"/></custom-block></autolambda><list></list></block><l>1.5</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="3. Testing Block %s" scope="local"><block var="GRADED TESTS"/></custom-block></autolambda><list></list></block><l>1.5</l></list></block><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><custom-block s="4. Testing Block %s" scope="local"><block var="GRADED TESTS"/></custom-block></autolambda><list></list></block><l>1.5</l></list></block></list></block></block></script></block-definition><block-definition s="grade" type="reporter" category="Autograder"><comment w="127" collapsed="false">Return a string in the Gradescope JSON format:&#xD;    {&quot;tests&quot;: [&#xD;        &lt;test 1&gt;,&#xD;        &lt;test 2&gt;,&#xD;        ...&#xD;    ]}&#xD;&#xD;See the &quot;format&quot; reporter under Autograder Utils.</comment><header></header><code></code><translations></translations><inputs></inputs><script><block s="doDeclareVariables"><list><l>test results</l><l>score</l><l>max score</l></list></block><block s="doSetVar"><l>test results</l><block s="reportMap"><block s="reifyReporter"><autolambda><custom-block s="run %l waiting up to %n seconds" scope="local"><l/><l>360</l></custom-block></autolambda><list></list></block><block var="tests"/></block></block><block s="doSetVar"><l>score</l><block s="reportCombine"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><l/></block></block></autolambda><list></list></block><block s="reportTextSplit"><block var="test results"/><l><option>json</option></l></block></block><block s="reifyReporter"><autolambda><block s="reportVariadicSum"><list><l></l><l></l></list></block></autolambda><list></list></block></block></block><block s="doSetVar"><l>max score</l><block s="reportCombine"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportListItem"><l>2</l><block s="reportListItem"><l>3</l><l/></block></block></autolambda><list></list></block><block s="reportTextSplit"><block var="test results"/><l><option>json</option></l></block></block><block s="reifyReporter"><autolambda><block s="reportVariadicSum"><list><l></l><l></l></list></block></autolambda><list></list></block></block></block><block s="doReport"><block s="reportJoinWords"><list><l>{"gradable":true,"score":</l><block s="reportQuotient"><block var="score"/><block var="max score"/></block><l>,</l><block s="reportJoinWords"><list><l>"tests":[</l><block s="reportCombine"><block var="test results"/><block s="reifyReporter"><autolambda><block s="reportJoinWords"><list><l></l><l>,</l><l></l></list></block></autolambda><list></list></block></block><l>]}</l></list></block></list></block></block></script><scripts><script x="431.96000000000004" y="148.25000000000006"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportListItem"><l>2</l><l/></block></autolambda><list></list></block><l/></block></script></scripts></block-definition><block-definition s="get block %&apos;label&apos;" type="reporter" category="Autograder Utils"><comment x="0" y="0" w="307.23078125000006" collapsed="false">The label of a block is its signature with &quot;_&quot; substituted for any input slot. For example, &quot;find block with label _&quot; is the label of this block.</comment><header></header><code></code><translations></translations><inputs><input type="%txt"></input></inputs><script><block s="doDeclareVariables"><list><l>result</l></list></block><block s="doSetVar"><l>result</l><block s="reportFindFirst"><block s="reifyPredicate"><autolambda><block s="reportVariadicEquals"><list><block s="reportBlockAttribute"><l><option>label</option></l><block var="block"/></block><block var="label"/></list></block></autolambda><list><l>block</l></list></block><block s="reportGet"><l><option>blocks</option></l></block></block></block><block s="doIf"><block s="reportIsA"><block var="result"/><l><option>text</option></l></block><script><custom-block s="error %txt"><block s="reportJoinWords"><list><l>Missing block with label: </l><block var="label"/></list></block></custom-block></script><list></list></block><block s="doReport"><block var="result"/></block></script><scripts><script x="417.0849609375" y="381.99999999999994"><block var="block"/></script></scripts></block-definition><block-definition s="count occurrences of %&apos;block&apos; in %&apos;ast&apos;" type="reporter" category="Autograder Utils"><comment x="0" y="0" w="100.99999999999989" collapsed="false">Count the number of calls of a block in an Abstract Syntax Tree.&#xD;&#xD;The input slots of a block passed in as argument should be blank.</comment><header></header><code></code><translations></translations><inputs><input type="%repRing"></input><input type="%l"></input></inputs><script><block s="doReport"><block s="reportCombine"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportIfElse"><block s="reportIsA"><block var="value"/><l><option>list</option></l></block><custom-block s="count occurrences of %repRing in %l" scope="local"><block var="block"/><block var="value"/></custom-block><block s="reportIfElse"><block s="reportVariadicEquals"><list><block var="block"/><block var="value"/></list></block><l>1</l><l>0</l></block></block></autolambda><list><l>value</l></list></block><block var="ast"/></block><block s="reifyReporter"><autolambda><block s="reportVariadicSum"><list><l></l><l></l></list></block></autolambda><list></list></block></block></block></script></block-definition><block-definition s="make solution" type="reporter" category="Autograder"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doDeclareVariables"><list><l>mapper</l><l>keeper</l></list></block><block s="doSetVar"><l>mapper</l><block s="reifyReporter"><autolambda><block s="reportListItem"><l>1</l><block var="one score"/></block></autolambda><list><l>one score</l></list></block></block><block s="doSetVar"><l>keeper</l><block s="reifyPredicate"><autolambda><block s="reportVariadicAnd"><list><block s="reportVariadicGreaterThan"><list><block s="reportListItem"><l>2</l><block var="one score"/></block><block s="reportListItem"><l>1</l><block var="one score"/></block></list></block><block s="reportVariadicLessThan"><list><block s="reportDifference"><block s="reportListItem"><l>2</l><block var="one score"/></block><block s="reportListItem"><l>1</l><block var="one score"/></block></block><l>10</l></list></block></list></block></autolambda><list><l>one score</l></list></block></block><block s="doReport"><block s="reifyReporter"><autolambda><block s="reportVariadicSum"><block s="reportMap"><block var="mapper"/><block s="reportKeep"><block var="keeper"/><block var="scores"/></block></block></block></autolambda><list><l>scores</l></list></block></block></script><scripts><script x="34" y="761.0000000000002"><block s="doSetVar"><l>keeper</l><block s="reifyPredicate"><autolambda><block s="reportVariadicAnd"><list><block s="reportVariadicGreaterThan"><list><block s="reportListItem"><l>2</l><block var="one score"/></block><block s="reportListItem"><l>1</l><block var="one score"/></block></list></block><block s="reportVariadicLessThan"><list><block s="reportDifference"><block s="reportListItem"><l>2</l><block var="one score"/></block><block s="reportListItem"><l>1</l><block var="one score"/></block></block><l>10</l></list></block></list></block></autolambda><list><l>one score</l></list></block></block><block s="doReport"><block s="reifyReporter"><autolambda><block s="reportVariadicSum"><block s="reportMap"><block var="mapper"/><block s="reportKeep"><block var="keeper"/><block var="scores"/></block></block></block></autolambda><list><l>scores</l></list></block></block></script></scripts></block-definition><block-definition s="constraints satisfied HOFs %&apos;blocks&apos;" type="predicate" category="Autograder"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>ast</l><l>forbidden blocks</l><l>HOFs blocks</l></list></block><block s="doSetVar"><l>ast</l><block s="reportTextSplit"><block s="reportBlockAttribute"><l><option>definition</option></l><block var="blocks"/></block><l><option>blocks</option></l></block></block><block s="doSetVar"><l>forbidden blocks</l><block s="reportNewList"><list><block s="reifyScript"><script><block s="doForever"><script></script></block></script><list></list></block><block s="reifyScript"><script><block s="doRepeat"><l></l><script></script></block></script><list></list></block><block s="reifyScript"><script><block s="doUntil"><l/><script></script></block></script><list></list></block><block s="reifyScript"><script><block s="doFor"><l> </l><l></l><l></l><script></script></block></script><list></list></block><block s="reifyScript"><script><block s="doForEach"><l> </l><l/><script></script></block></script><list></list></block><block var="blocks"/></list></block></block><block s="doSetVar"><l>HOFs blocks</l><block s="reportNewList"><list><block s="reifyReporter"><autolambda><block s="reportMap"><block s="reifyReporter"><script></script><list></list></block><l/></block></autolambda><list></list></block><block s="reifyReporter"><autolambda><block s="reportKeep"><block s="reifyPredicate"><script></script><list></list></block><l/></block></autolambda><list></list></block><block s="reifyReporter"><autolambda><block s="reportCombine"><l/><block s="reifyReporter"><script></script><list></list></block></block></autolambda><list></list></block></list></block></block><block s="doReport"><block s="reportVariadicAnd"><list><custom-block s="all of %mult%boolUE"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reifyPredicate"><autolambda><block s="reportVariadicEquals"><list><custom-block s="count occurrences of %repRing in %l" scope="local"><block var="block"/><block var="ast"/></custom-block><l>0</l></list></block></autolambda><list></list></block></autolambda><list><l>block</l></list></block><block var="forbidden blocks"/></block></custom-block><block s="reportVariadicGreaterThan"><list><block s="reportVariadicSum"><block s="reportMap"><block s="reifyReporter"><autolambda><custom-block s="count occurrences of %repRing in %l" scope="local"><block var="block"/><block var="ast"/></custom-block></autolambda><list><l>block</l></list></block><block var="HOFs blocks"/></block></block><l>0</l></list></block></list></block></block></script></block-definition><block-definition s="constraints satisfied RECURSIVE" type="predicate" category="Autograder"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doDeclareVariables"><list><l>ast</l><l>forbidden blocks</l></list></block><block s="doSetVar"><l>ast</l><block s="reportTextSplit"><block s="reportBlockAttribute"><l><option>definition</option></l><block var="student RECURSIVE"/></block><l><option>blocks</option></l></block></block><block s="doSetVar"><l>forbidden blocks</l><block s="reportNewList"><list><block s="reifyScript"><script><block s="doForever"><script></script></block></script><list></list></block><block s="reifyScript"><script><block s="doRepeat"><l></l><script></script></block></script><list></list></block><block s="reifyScript"><script><block s="doUntil"><l/><script></script></block></script><list></list></block><block s="reifyScript"><script><block s="doFor"><l> </l><l></l><l></l><script></script></block></script><list></list></block><block s="reifyScript"><script><block s="doForEach"><l> </l><l/><script></script></block></script><list></list></block><block var="ppp"/><block s="reifyReporter"><autolambda><block s="reportMap"><block s="reifyReporter"><script></script><list></list></block><l/></block></autolambda><list></list></block><block s="reifyReporter"><autolambda><block s="reportKeep"><block s="reifyPredicate"><script></script><list></list></block><l/></block></autolambda><list></list></block><block s="reifyReporter"><autolambda><block s="reportCombine"><l/><block s="reifyReporter"><script></script><list></list></block></block></autolambda><list></list></block></list></block></block><block s="doReport"><block s="reportVariadicAnd"><list><custom-block s="all of %mult%boolUE"><block s="reportMap"><block s="reifyPredicate"><autolambda><block s="reifyPredicate"><autolambda><block s="reportVariadicEquals"><list><custom-block s="count occurrences of %repRing in %l" scope="local"><block var="block"/><block var="ast"/></custom-block><l>0</l></list></block></autolambda><list></list></block></autolambda><list><l>block</l></list></block><block var="forbidden blocks"/></block></custom-block><block s="reportVariadicGreaterThan"><list><custom-block s="count occurrences of %repRing in %l" scope="local"><block var="student RECURSIVE"/><block var="ast"/></custom-block><l>0</l></list></block></list></block></block></script></block-definition><block-definition s="run %&apos;data for one test&apos; waiting up to %&apos;wait seconds&apos; seconds" type="reporter" category="Autograder Utils"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%n">5</input></inputs><script><block s="doDeclareVariables"><list><l>run test?</l><l>test block</l><l>test name</l><l>max score</l></list></block><block s="doSetVar"><l>run test?</l><block s="reportListItem"><l>1</l><block var="data for one test"/></block></block><block s="doSetVar"><l>test block</l><block s="reportListItem"><l>2</l><block var="data for one test"/></block></block><block s="doSetVar"><l>test name</l><block s="reportBlockAttribute"><l><option>label</option></l><block var="test block"/></block></block><block s="doSetVar"><l>max score</l><block s="reportListItem"><l>3</l><block var="data for one test"/></block></block><block s="doIf"><block s="reportNot"><block var="run test?"/></block><script><block s="doReport"><custom-block s="format: score earned= %n , max score= %n , name= %txt , message= %txt" scope="local"><l>0</l><block var="max score"/><block var="test name"/><l>Test skipped.</l></custom-block></block></script><list></list></block><block s="doDeclareVariables"><list><l>test result</l></list></block><block s="doSetVar"><l>test result</l><block s="reportNewList"><list></list></block></block><block s="doResetTimer"></block><block s="fork"><block s="reifyScript"><script><block s="doSetVar"><l>test result</l><block s="evaluate"><block var="test block"/><list></list></block></block></script><list></list></block><list></list></block><block s="doWaitUntil"><block s="reportVariadicOr"><list><block s="reportNot"><block s="reportListIsEmpty"><block var="test result"/></block></block><block s="reportVariadicGreaterThan"><list><block s="getTimer"></block><block var="wait seconds"/></list></block></list></block></block><block s="doStopThis"><l><option>all but this script</option></l></block><block s="doIf"><block s="reportListIsEmpty"><block var="test result"/></block><script><block s="doReport"><custom-block s="format: score earned= %n , max score= %n , name= %txt , message= %txt" scope="local"><l>0</l><block var="max score"/><block var="test name"/><l>Test timed out.</l></custom-block></block></script><list></list></block><block s="doDeclareVariables"><list><l>test passed?</l><l>feedback</l><l>score earned</l></list></block><block s="doSetVar"><l>test passed?</l><block s="reportListItem"><l>1</l><block var="test result"/></block></block><block s="doSetVar"><l>feedback</l><block s="reportListItem"><l>2</l><block var="test result"/></block></block><block s="doSetVar"><l>score earned</l><block s="reportVariadicProduct"><list><block var="test passed?"/><block var="max score"/></list></block></block><block s="doChangeVar"><l>score</l><block var="score earned"/></block><block s="doReport"><custom-block s="format: score earned= %n , max score= %n , name= %txt , message= %txt" scope="local"><block var="score earned"/><block var="max score"/><block var="test name"/><block var="feedback"/></custom-block></block></script></block-definition><block-definition s="format: score earned= %&apos;earned&apos; , max score= %&apos;max score&apos; , name= %&apos;name&apos; , message= %&apos;message&apos;" type="reporter" category="Autograder Utils"><header></header><code></code><translations></translations><inputs><input type="%n">0</input><input type="%n">0</input><input type="%txt"></input><input type="%txt"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>earned</l><l>total</l><l>name</l><l>message</l></list><l>    return JSON.stringify({&#xD;        "name": name.replaceAll(" _", ""),&#xD;        "points": parseFloat(earned),&#xD;        "max_points": parseFloat(total),&#xD;        "output": message&#xD;    });</l></block><list><block var="earned"/><block var="max score"/><block var="name"/><block var="message"/></list></block></block></script></block-definition><block-definition s="%&apos;f&apos; equals solution on %&apos;list&apos;" type="predicate" category="Autograder Utils"><header></header><code></code><translations></translations><inputs><input type="%repRing"></input><input type="%l"></input></inputs><script><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doDeclareVariables"><list><l>solution</l><l>inputs</l></list></block><block s="doSetVar"><l>inputs</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportListItem"><l>1</l><l/></block></autolambda><list></list></block><block var="list"/></block></block><block s="doSetVar"><l>solution</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportListItem"><l>2</l><l/></block></autolambda><list></list></block><block var="list"/></block></block><block s="doFor"><l>i</l><l>1</l><block s="reportListAttribute"><l><option>length</option></l><block var="inputs"/></block><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block s="reportBlockAttribute"><l><option>label</option></l><block s="reifyReporter"><autolambda><block var="f"/></autolambda><list></list></block></block><l>GRADED TESTS</l></list></block><script><block s="doIf"><block s="reportVariadicGreaterThanOrEquals"><list><block s="evaluate"><block var="f"/><list></list></block><block s="reportListItem"><block var="i"/><block var="inputs"/></block></list></block><script><block s="doReport"><block s="reportBoolean"><l><bool>true</bool></l></block></block></script><list></list></block></script><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block s="reportBlockAttribute"><l><option>label</option></l><block var="f"/></block><l>merge up column _ of _</l></list></block><script><block s="doIf"><block s="reportVariadicNotEquals"><list><block s="evaluate"><block var="f"/><list><block s="reportListItem"><l>3</l><block s="reportListItem"><l>1</l><block var="list"/></block></block><block s="reportListItem"><block var="i"/><block var="inputs"/></block></list></block><block s="reportListItem"><block var="i"/><block var="solution"/></block></list></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><list></list></block></script><script><block s="doIf"><block s="reportVariadicNotEquals"><list><block s="evaluate"><block var="f"/><list><block s="reportListItem"><block var="i"/><block var="inputs"/></block></list></block><block s="reportListItem"><block var="i"/><block var="solution"/></block></list></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><list></list></block></script></block></script></block></script></block><block s="doReport"><block s="reportBoolean"><l><bool>true</bool></l></block></block></script><l>error</l><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script></custom-block></script><scripts><script x="588" y="151.33333333333343"><block s="reportJoinWords"><list><l></l></list></block></script><script x="590.6416015625" y="387.8333333333333"><block s="reportVariadicAnd"><list><l/><l/></list></block></script><script x="577.9951171875" y="185.66666666666657"><block s="reportBoolean"><l><bool>false</bool></l></block></script><script x="606.5712890625" y="231.16666666666669"><block var="inputs"/></script><script x="630.0830078125" y="286.33333333333326"><block s="reportVariadicSum"><list><block var="i"/><l>1</l></list></block></script><script x="587.5712890625" y="336.49999999999994"><block var="inputs"/></script><script x="380.140625" y="66.5"><block var="inputs"/></script><script x="500.693359375" y="94.66666666666669"><block var="i"/></script><script x="584.34375" y="19.666666666666686"><block var="list"/></script><script x="494.041015625" y="193.5000000000001"><block s="reifyReporter"><script></script><list></list></block></script></scripts></block-definition><block-definition s="1. test has letter block %&apos;block&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><l>Berkeley</l><l>y</l></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="block"/><block s="reportBoolean"><l><bool>true</bool></l></block></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="1. test has only these letters block %&apos;block&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><l>words</l><l>words</l></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="block"/><block s="reportBoolean"><l><bool>true</bool></l></block></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script><scripts><script x="361.455078125" y="236.66666666666669"><block s="reportNewList"><list><l>words</l><l>word</l></list></block></script><script x="226" y="412.2"><block s="reportNewList"><list><l></l><l></l></list></block></script><script x="353" y="394.2"><block s="reportNewList"><list><l></l><l></l></list></block></script><script x="57" y="348.2"><block s="reportNewList"><list><block s="reportNewList"><list><l>words</l><l>words</l></list></block><l></l></list></block></script><script x="390.2168750000001" y="164.50000000000006"><block var="solution"/></script><script x="436.130859375" y="94.6666666666667"><block s="reportNewList"><list><l></l><l></l><l></l></list></block></script></scripts></block-definition><block-definition s="test main HOFs %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><block s="reportNewList"><list><block s="reportNewList"><list><l>21</l><l>6</l></list></block></list></block><block s="reportNewList"><list><block s="reportNewList"><list><l>6</l><l>21</l></list></block></list></block><block s="reportNewList"><list><block s="reportNewList"><list><l>22</l><l>15</l></list></block></list></block><block s="reportNewList"><list><block s="reportNewList"><list><l>15</l><l>22</l></list></block></list></block><block s="reportNewList"><list><block s="reportNewList"><list><l>0</l><l>0</l></list></block><block s="reportNewList"><list><l>7</l><l>7</l></list></block><block s="reportNewList"><list><l>35</l><l>35</l></list></block></list></block><block s="reportNewList"><list><block s="reportNewList"><list><l>17</l><l>7</l></list></block><block s="reportNewList"><list><l>16</l><l>8</l></list></block><block s="reportNewList"><list><l>14</l><l>24</l></list></block><block s="reportNewList"><list><l>15</l><l>23</l></list></block></list></block><block s="reportNewList"><list><block s="reportNewList"><list><l>7</l><l>28</l></list></block><block s="reportNewList"><list><l>3</l><l>3</l></list></block><block s="reportNewList"><list><l>27</l><l>3</l></list></block><block s="reportNewList"><list><l>6</l><l>12</l></list></block><block s="reportNewList"><list><l>12</l><l>6</l></list></block></list></block><block s="reportNewList"><list><block s="reportNewList"><list><l>8</l><l>0</l></list></block><block s="reportNewList"><list><l>16</l><l>3</l></list></block><block s="reportNewList"><list><l>16</l><l>3</l></list></block><block s="reportNewList"><list><l>8</l><l>0</l></list></block><block s="reportNewList"><list><l>3</l><l>17</l></list></block></list></block><block s="reportNewList"><list><block s="reportNewList"><list><l>7</l><l>21</l></list></block><block s="reportNewList"><list><l>7</l><l>10</l></list></block><block s="reportNewList"><list><l>7</l><l>21</l></list></block><block s="reportNewList"><list><l>7</l><l>10</l></list></block><block s="reportNewList"><list><l>14</l><l>2</l></list></block></list></block><block s="reportNewList"><list><block s="reportNewList"><list><l>100</l><l>5</l></list></block><block s="reportNewList"><list><l>80</l><l>81</l></list></block><block s="reportNewList"><list><l>50</l><l>40</l></list></block><block s="reportNewList"><list><l>3</l><l>30</l></list></block><block s="reportNewList"><list><l>60</l><l>70</l></list></block><block s="reportNewList"><list><l>91</l><l>90</l></list></block><block s="reportNewList"><list><l>19</l><l>10</l></list></block><block s="reportNewList"><list><l>20</l><l>29</l></list></block></list></block><block s="reportNewList"><list><block s="reportNewList"><list><l>34</l><l>25</l></list></block><block s="reportNewList"><list><l>15</l><l>11</l></list></block><block s="reportNewList"><list><l>28</l><l>47</l></list></block><block s="reportNewList"><list><l>3</l><l>20</l></list></block><block s="reportNewList"><list><l>39</l><l>43</l></list></block><block s="reportNewList"><list><l>31</l><l>23</l></list></block><block s="reportNewList"><list><l>12</l><l>50</l></list></block><block s="reportNewList"><list><l>26</l><l>44</l></list></block><block s="reportNewList"><list><l>35</l><l>41</l></list></block></list></block><block s="reportNewList"><list><block s="reportNewList"><list><l>17</l><l>30</l></list></block><block s="reportNewList"><list><l>59</l><l>29</l></list></block><block s="reportNewList"><list><l>25</l><l>16</l></list></block><block s="reportNewList"><list><l>19</l><l>7</l></list></block><block s="reportNewList"><list><l>32</l><l>45</l></list></block><block s="reportNewList"><list><l>56</l><l>13</l></list></block><block s="reportNewList"><list><l>43</l><l>21</l></list></block><block s="reportNewList"><list><l>56</l><l>42</l></list></block><block s="reportNewList"><list><l>25</l><l>16</l></list></block><block s="reportNewList"><list><l>8</l><l>56</l></list></block></list></block></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="test %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><block s="reportNewList"><list><l>0</l><l>5</l></list></block><block s="reportNewList"><list><l>5</l><l>10</l></list></block></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script><scripts><script x="375.28125" y="384.83333333333354"><block s="reportNewList"><list><l>8</l><l>56</l></list></block></script><script x="287.7109375" y="384.8333333333334"><block s="reportNewList"><list><l>25</l><l>16</l></list></block></script><script x="200.140625" y="384.8333333333334"><block s="reportNewList"><list><l>56</l><l>42</l></list></block></script></scripts></block-definition><block-definition s="testing block" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script></block-definition><block-definition s="grade 2 or 4 randomness %&apos;func&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doDeclareVariables"><list><l>add 2 or 4 total score</l><l>only 2 or 4</l><l>new element</l><l>only adds to empty slots</l><l>2 added around 75 percent</l><l>4 added around 25 percent</l><l>2s</l><l>4s</l></list></block><block s="doSetVar"><l>add 2 or 4 total score</l><l>0</l></block><block s="doSetVar"><l>only 2 or 4</l><block s="reportBoolean"><l><bool>true</bool></l></block></block><block s="doRepeat"><l>10</l><script><block s="doSetVar"><l>new element</l><block s="reportVariadicSum"><block s="reportVariadicSum"><block s="evaluate"><block var="func"/><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l></custom-block></list></block></block></block></block><block s="doIf"><block s="reportNot"><block s="reportVariadicOr"><list><block s="reportVariadicEquals"><list><block var="new element"/><l>2</l></list></block><block s="reportVariadicEquals"><list><block var="new element"/><l>4</l></list></block></list></block></block><script><block s="doSetVar"><l>only 2 or 4</l><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><list></list></block></script></block><block s="doSetVar"><l>only adds to empty slots</l><block s="reportBoolean"><l><bool>true</bool></l></block></block><block s="doRepeat"><l>10</l><script><block s="doSetVar"><l>new element</l><block s="reportVariadicSum"><block s="reportVariadicSum"><block s="reportDifference"><block s="evaluate"><block var="func"/><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>1024</l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l>1024</l><l>1024</l><l>1024</l><l>1024</l><l>1024</l><l>1024</l><l>1024</l><l>1024</l></custom-block></list></block><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>1024</l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l>1024</l><l>1024</l><l>1024</l><l>1024</l><l>1024</l><l>1024</l><l>1024</l><l>1024</l></custom-block></block></block></block></block><block s="doIf"><block s="reportNot"><block s="reportVariadicOr"><list><block s="reportVariadicEquals"><list><block var="new element"/><l>2</l></list></block><block s="reportVariadicEquals"><list><block var="new element"/><l>4</l></list></block></list></block></block><script><block s="doSetVar"><l>only adds to empty slots</l><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><list></list></block></script></block><block s="doSetVar"><l>2s</l><l>0</l></block><block s="doSetVar"><l>4s</l><l>0</l></block><block s="doRepeat"><l>30</l><script><block s="doSetVar"><l>new element</l><block s="reportVariadicSum"><block s="reportVariadicSum"><block s="evaluate"><block var="func"/><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l></custom-block></list></block></block></block></block><block s="doIf"><block s="reportVariadicEquals"><list><block var="new element"/><l>2</l></list></block><script><block s="doChangeVar"><l>2s</l><l>1</l></block></script><list></list></block><block s="doIf"><block s="reportVariadicEquals"><list><block var="new element"/><l>4</l></list></block><script><block s="doChangeVar"><l>4s</l><l>1</l></block></script><list></list></block></script></block><block s="doSetVar"><l>2 added around 75 percent</l><block s="reportVariadicAnd"><list><block s="reportVariadicLessThanOrEquals"><list><l>15</l><block var="2s"/></list></block><block s="reportVariadicLessThanOrEquals"><list><block var="2s"/><l>30</l></list></block></list></block></block><block s="doSetVar"><l>4 added around 25 percent</l><block s="reportVariadicAnd"><list><block s="reportVariadicLessThanOrEquals"><list><l>0</l><block var="4s"/></list></block><block s="reportVariadicLessThanOrEquals"><list><block var="4s"/><l>15</l></list></block></list></block></block><block s="doReport"><block s="reportNewList"><list><block s="reportNewList"><list><l>add 2 or 4 ONLY adds 2 or 4</l><block s="reportBoolean"><l><bool>true</bool></l></block><block var="only 2 or 4"/><l>1</l><block s="reportIfElse"><block var="only 2 or 4"/><l>1</l><l>0</l></block></list></block><block s="reportNewList"><list><l>add 2 or 4 ONLY adds to empty slots</l><block s="reportBoolean"><l><bool>true</bool></l></block><block var="only adds to empty slots"/><l>1</l><block s="reportIfElse"><block var="only adds to empty slots"/><l>1</l><l>0</l></block></list></block><block s="reportNewList"><list><l>add 2 or 4 adds 2 75% of the time</l><block s="reportBoolean"><l><bool>true</bool></l></block><block var="2 added around 75 percent"/><l>1</l><block s="reportIfElse"><block var="2 added around 75 percent"/><l>1</l><l>0</l></block></list></block><block s="reportNewList"><list><l>add 2 or 4 adds 4 25% of the time</l><block s="reportBoolean"><l><bool>true</bool></l></block><block var="4 added around 25 percent"/><l>1</l><block s="reportIfElse"><block var="4 added around 25 percent"/><l>1</l><l>0</l></block></list></block></list></block></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportNewList"><list><l>add 2 or 4 ONLY adds 2 or 4</l><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reportBoolean"><l><bool>false</bool></l></block><l>1</l><l>0</l></list></block><block s="reportNewList"><list><l>add 2 or 4 ONLY adds to empty slots</l><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reportBoolean"><l><bool>false</bool></l></block><l>1</l><l>0</l></list></block><block s="reportNewList"><list><l>add 2 or 4 adds 2 75% of the time</l><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reportBoolean"><l><bool>false</bool></l></block><l>1</l><l>0</l></list></block><block s="reportNewList"><list><l>add 2 or 4 adds 4 25% of the time</l><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reportBoolean"><l><bool>false</bool></l></block><l>1</l><l>0</l></list></block></list></block></block></script></custom-block></script></block-definition><block-definition s="1. Rotate Clockwise %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><block s="reportNewList"><list><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><l>2</l><l>4</l></list></block><block s="reportNewList"><list><l>8</l><l></l></list></block></list></block></custom-block><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><l>8</l><l>2</l></list></block><block s="reportNewList"><list><l>0</l><l>4</l></list></block></list></block></custom-block></list></block><block s="reportNewList"><list><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><l>16</l><l>4</l></list></block><block s="reportNewList"><list><l>8</l><l></l></list></block></list></block></custom-block><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><l>8</l><l>16</l></list></block><block s="reportNewList"><list><l>0</l><l>4</l></list></block></list></block></custom-block></list></block></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="2. Rotate Clockwise %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><block s="reportNewList"><list><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><l>2</l><l>4</l><l>8</l></list></block><block s="reportNewList"><list><l>16</l><l>32</l><l>64</l></list></block><block s="reportNewList"><list><l>128</l><l>256</l><l>256</l></list></block></list></block></custom-block><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><l>128</l><l>16</l><l>2</l></list></block><block s="reportNewList"><list><l>256</l><l>32</l><l>4</l></list></block><block s="reportNewList"><list><l>256</l><l>64</l><l>8</l></list></block></list></block></custom-block></list></block><block s="reportNewList"><list><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><l>1024</l><l>4</l><l>8</l></list></block><block s="reportNewList"><list><l>16</l><l>32</l><l>64</l></list></block><block s="reportNewList"><list><l>128</l><l>256</l><l>256</l></list></block></list></block></custom-block><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><l>128</l><l>16</l><l>1024</l></list></block><block s="reportNewList"><list><l>256</l><l>32</l><l>4</l></list></block><block s="reportNewList"><list><l>256</l><l>64</l><l>8</l></list></block></list></block></custom-block></list></block></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="3. Rotate Clockwise %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l>4</l><l>8</l><l></l><l>16</l><l>32</l><l>64</l><l></l><l>128</l><l>256</l><l>256</l><l></l><l></l><l></l><l></l><l></l></custom-block><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>0</l><l>128</l><l>16</l><l>2</l><l>0</l><l>256</l><l>32</l><l>4</l><l>0</l><l>256</l><l>64</l><l>8</l><l></l><l></l><l></l><l></l></custom-block></list></block><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>1024</l><l>4</l><l>8</l><l></l><l>16</l><l>32</l><l>64</l><l></l><l>128</l><l>256</l><l>256</l><l></l><l></l><l></l><l></l><l></l></custom-block><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>0</l><l>128</l><l>16</l><l>1024</l><l>0</l><l>256</l><l>32</l><l>4</l><l>0</l><l>256</l><l>64</l><l>8</l><l></l><l></l><l></l><l></l></custom-block></list></block></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="4. Rotate Clockwise %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l>4</l><l>8</l><l>16</l><l>32</l><l>64</l><l>128</l><l>256</l><l>512</l><l>1024</l><l>2048</l><l>4096</l><l>8192</l><l>16384</l><l>32768</l><l>65536</l></custom-block><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>8192</l><l>512</l><l>32</l><l>2</l><l>16384</l><l>1024</l><l>64</l><l>4</l><l>32768</l><l>2048</l><l>128</l><l>8</l><l>65536</l><l>4096</l><l>256</l><l>16</l></custom-block></list></block><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>4</l><l>4</l><l>8</l><l>16</l><l>32</l><l>64</l><l>128</l><l>256</l><l>512</l><l>1024</l><l>2048</l><l>4096</l><l>8192</l><l>16384</l><l>32768</l><l>65536</l></custom-block><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>8192</l><l>512</l><l>32</l><l>4</l><l>16384</l><l>1024</l><l>64</l><l>4</l><l>32768</l><l>2048</l><l>128</l><l>8</l><l>65536</l><l>4096</l><l>256</l><l>16</l></custom-block></list></block></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="1. Merge Up Column %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><block s="reportNewList"><list><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><l></l><l></l></list></block><block s="reportNewList"><list><l>2</l><l></l></list></block></list></block></custom-block><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><l>2</l><l></l></list></block><block s="reportNewList"><list><l></l><l></l></list></block></list></block></custom-block><l>1</l></list></block><block s="reportNewList"><list><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><l></l><l></l></list></block><block s="reportNewList"><list><l>4</l><l></l></list></block></list></block></custom-block><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><l>4</l><l></l></list></block><block s="reportNewList"><list><l></l><l></l></list></block></list></block></custom-block><l>1</l></list></block></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="2. Merge Up Column %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><block s="reportNewList"><list><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><l>2</l><l></l><l>8</l></list></block><block s="reportNewList"><list><l>16</l><l></l><l>64</l></list></block><block s="reportNewList"><list><l>128</l><l>512</l><l>256</l></list></block></list></block></custom-block><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><l>2</l><l>512</l><l>8</l></list></block><block s="reportNewList"><list><l>16</l><l></l><l>64</l></list></block><block s="reportNewList"><list><l>128</l><l></l><l>256</l></list></block></list></block></custom-block><l>2</l></list></block><block s="reportNewList"><list><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><l>2</l><l></l><l>8</l></list></block><block s="reportNewList"><list><l>16</l><l></l><l>64</l></list></block><block s="reportNewList"><list><l>128</l><l>256</l><l>256</l></list></block></list></block></custom-block><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><l>2</l><l>256</l><l>8</l></list></block><block s="reportNewList"><list><l>16</l><l></l><l>64</l></list></block><block s="reportNewList"><list><l>128</l><l></l><l>256</l></list></block></list></block></custom-block><l>2</l></list></block></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="3. Merge Up Column %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l></l><l></l><l></l><l></l><l>4</l><l></l><l></l><l></l><l></l><l>2</l><l></l><l></l><l></l><l>2</l><l>8</l></custom-block><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l></l><l>4</l><l></l><l></l><l>4</l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l>8</l></custom-block><l>3</l></list></block><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l></l><l></l><l></l><l></l><l>4</l><l></l><l></l><l></l><l></l><l>4</l><l></l><l></l><l></l><l>4</l><l>8</l></custom-block><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l></l><l>8</l><l></l><l></l><l>4</l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l>8</l></custom-block><l>3</l></list></block></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="4. Merge Up Column %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l></l><l></l><l>8</l><l></l><l>4</l><l></l><l></l><l></l><l></l><l>2</l><l>8</l><l></l><l></l><l>2</l><l>8</l></custom-block><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l></l><l></l><l>16</l><l></l><l>4</l><l></l><l>8</l><l></l><l></l><l>2</l><l></l><l></l><l></l><l>2</l><l></l></custom-block><l>4</l></list></block><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l></l><l></l><l>4</l><l></l><l>4</l><l></l><l></l><l></l><l></l><l>2</l><l>4</l><l></l><l></l><l>2</l><l>4</l></custom-block><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l></l><l></l><l>8</l><l></l><l>4</l><l></l><l>4</l><l></l><l></l><l>2</l><l></l><l></l><l></l><l>2</l><l></l></custom-block><l>4</l></list></block></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="5. Merge Up Column %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l></l><l></l><l>8</l><l></l><l>4</l><l></l><l>8</l><l></l><l></l><l>2</l><l>8</l><l></l><l></l><l>2</l><l>8</l></custom-block><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l></l><l></l><l>16</l><l></l><l>4</l><l></l><l>16</l><l></l><l></l><l>2</l><l></l><l></l><l></l><l>2</l><l></l></custom-block><l>4</l></list></block><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l></l><l></l><l>2</l><l></l><l>4</l><l></l><l>2</l><l></l><l></l><l>2</l><l>2</l><l></l><l></l><l>2</l><l>2</l></custom-block><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l></l><l></l><l>4</l><l></l><l>4</l><l></l><l>4</l><l></l><l></l><l>2</l><l></l><l></l><l></l><l>2</l><l></l></custom-block><l>4</l></list></block></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="6. Merge Up Column %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l></l><l>8</l><l>8</l><l></l><l>4</l><l>4</l><l>8</l><l></l><l></l><l>4</l><l>8</l><l></l><l></l><l>8</l><l>8</l></custom-block><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l></l><l>8</l><l>8</l><l></l><l>4</l><l>8</l><l>8</l><l></l><l></l><l>8</l><l>8</l><l></l><l></l><l></l><l>8</l></custom-block><l>3</l></list></block><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l></l><l>4</l><l>2</l><l></l><l>4</l><l>2</l><l>2</l><l></l><l></l><l>2</l><l>2</l><l></l><l></l><l>4</l><l>2</l></custom-block><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l></l><l>4</l><l>2</l><l></l><l>4</l><l>4</l><l>2</l><l></l><l></l><l>4</l><l>2</l><l></l><l></l><l></l><l>2</l></custom-block><l>3</l></list></block></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="7. Merge Up Column %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l></l><l>2</l><l>8</l><l></l><l>4</l><l>8</l><l>8</l><l></l><l></l><l>4</l><l>8</l><l></l><l></l><l>2</l><l>8</l></custom-block><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l></l><l>2</l><l>8</l><l></l><l>4</l><l>8</l><l>8</l><l></l><l></l><l>4</l><l>8</l><l></l><l></l><l>2</l><l>8</l></custom-block><l>3</l></list></block><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l></l><l>4</l><l>2</l><l></l><l>4</l><l>2</l><l>2</l><l></l><l></l><l>16</l><l>2</l><l></l><l></l><l>2</l><l>2</l></custom-block><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l></l><l>4</l><l>2</l><l></l><l>4</l><l>2</l><l>2</l><l></l><l></l><l>16</l><l>2</l><l></l><l></l><l>2</l><l>2</l></custom-block><l>3</l></list></block></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="1. Merge Up %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><block s="reportNewList"><list><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><l>2</l><l></l></list></block><block s="reportNewList"><list><l>2</l><l>8</l></list></block></list></block></custom-block><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><l>4</l><l>8</l></list></block><block s="reportNewList"><list><l></l><l></l></list></block></list></block></custom-block></list></block><block s="reportNewList"><list><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><l></l><l>4</l></list></block><block s="reportNewList"><list><l>2</l><l>4</l></list></block></list></block></custom-block><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><l>2</l><l>8</l></list></block><block s="reportNewList"><list><l></l><l></l></list></block></list></block></custom-block></list></block></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="2. Merge Up %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l></l><l></l><l></l><l></l><l>4</l><l>16</l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l>8</l></custom-block><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l>4</l><l>16</l><l>8</l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l></custom-block></list></block><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l></l><l></l><l></l><l></l><l>4</l><l>16</l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l>32</l></custom-block><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l>4</l><l>16</l><l>32</l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l></custom-block></list></block></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="3. Merge Up %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l>4</l><l>16</l><l></l><l>2</l><l>4</l><l>16</l><l>8</l><l>2</l><l></l><l></l><l></l><l>2</l><l>4</l><l></l><l>8</l></custom-block><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>4</l><l>8</l><l>32</l><l>16</l><l>4</l><l>4</l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l></custom-block></list></block><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l>4</l><l>16</l><l></l><l>2</l><l>4</l><l>16</l><l>4</l><l>2</l><l></l><l></l><l></l><l>2</l><l>4</l><l></l><l>4</l></custom-block><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>4</l><l>8</l><l>32</l><l>8</l><l>4</l><l>4</l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l><l></l></custom-block></list></block></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="4. Merge Up %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l>8</l><l>16</l><l>8</l><l>4</l><l>4</l><l>16</l><l></l><l>8</l><l>4</l><l></l><l></l><l>16</l><l>8</l><l></l><l>8</l></custom-block><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l>8</l><l>32</l><l>16</l><l>4</l><l>8</l><l></l><l></l><l>8</l><l>8</l><l></l><l></l><l>16</l><l></l><l></l><l></l></custom-block></list></block><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l>8</l><l>16</l><l>4</l><l>4</l><l>4</l><l>16</l><l></l><l>8</l><l>4</l><l></l><l></l><l>16</l><l>8</l><l></l><l>4</l></custom-block><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l>8</l><l>32</l><l>8</l><l>4</l><l>8</l><l></l><l></l><l>8</l><l>8</l><l></l><l></l><l>16</l><l></l><l></l><l></l></custom-block></list></block></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="1. No Moves Left %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><block s="reportNewList"><list><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><l>2</l><l>4</l></list></block><block s="reportNewList"><list><l>2</l><l>16</l></list></block></list></block></custom-block><block s="reportBoolean"><l><bool>false</bool></l></block></list></block><block s="reportNewList"><list><custom-block s="new board from matrix %l"><block s="reportNewList"><list><block s="reportNewList"><list><l>4</l><l>16</l></list></block><block s="reportNewList"><list><l>4</l><l>32</l></list></block></list></block></custom-block><block s="reportBoolean"><l><bool>false</bool></l></block></list></block></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="2. No Moves Left %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l>4</l><l>8</l><l>16</l><l>32</l><l>64</l><l>128</l><l>256</l><l>512</l><l>1024</l><l>2048</l><l>4096</l><l>8192</l><l>16384</l><l>32768</l><l>65536</l></custom-block><block s="reportBoolean"><l><bool>true</bool></l></block></list></block><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l>4</l><l>8</l><l>16</l><l>32</l><l>64</l><l>128</l><l>256</l><l>512</l><l>1024</l><l>2048</l><l>4096</l><l>8192</l><l>16384</l><l>32768</l><l>2</l></custom-block><block s="reportBoolean"><l><bool>true</bool></l></block></list></block></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="3. No Moves Left %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l>4</l><l>8</l><l>16</l><l>32</l><l>64</l><l>128</l><l>256</l><l>512</l><l>1024</l><l>1024</l><l>4096</l><l>8192</l><l>16384</l><l>32768</l><l>65536</l></custom-block><block s="reportBoolean"><l><bool>false</bool></l></block></list></block><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l>4</l><l>8</l><l>16</l><l>32</l><l>64</l><l>128</l><l>256</l><l>512</l><l>8</l><l>8</l><l>4096</l><l>8192</l><l>16384</l><l>32768</l><l>2</l></custom-block><block s="reportBoolean"><l><bool>false</bool></l></block></list></block></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="4. No Moves Left %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><block s="reportNewList"><list><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l>8</l><l>16</l><l>2</l><l>4</l><l>4</l><l>16</l><l>8</l><l>8</l><l>4</l><l></l><l></l><l>16</l><l>8</l><l></l><l></l></custom-block><block s="reportBoolean"><l><bool>false</bool></l></block></list></block><block s="reportNewList"><list><custom-block s="new 4x4 board %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n %br %n %n %n %n"><l>2</l><l>8</l><l>16</l><l>8</l><l>4</l><l>4</l><l>16</l><l>8</l><l>8</l><l>4</l><l></l><l></l><l>16</l><l>8</l><l></l><l></l></custom-block><block s="reportBoolean"><l><bool>false</bool></l></block></list></block></list></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="1. Add 2 or 4" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doDeclareVariables"><list><l>expected</l><l>actual</l></list></block><block s="doSetVar"><l>expected</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportListItem"><l>2</l><l/></block></autolambda><list></list></block><block var="2 or 4 randomness list"/></block></block><block s="doSetVar"><l>actual</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportListItem"><l>2</l><l/></block></autolambda><list></list></block><block var="2 or 4 randomness list"/></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block s="reportListItem"><l>1</l><block var="expected"/></block><block s="reportListItem"><l>1</l><block var="actual"/></block></list></block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="set 2 or 4 randomness %&apos;function&apos;" type="command" category="Autograder"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doSetVar"><l>2 or 4 randomness list</l><custom-block s="grade 2 or 4 randomness %s" scope="local"><block var="function"/></custom-block></block></script></block-definition><block-definition s="2. Add 2 or 4" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doDeclareVariables"><list><l>expected</l><l>actual</l></list></block><block s="doSetVar"><l>expected</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportListItem"><l>2</l><l/></block></autolambda><list></list></block><block var="2 or 4 randomness list"/></block></block><block s="doSetVar"><l>actual</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportListItem"><l>2</l><l/></block></autolambda><list></list></block><block var="2 or 4 randomness list"/></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block s="reportListItem"><l>2</l><block var="expected"/></block><block s="reportListItem"><l>2</l><block var="actual"/></block></list></block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="3. Add 2 or 4" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doDeclareVariables"><list><l>expected</l><l>actual</l></list></block><block s="doSetVar"><l>expected</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportListItem"><l>2</l><l/></block></autolambda><list></list></block><block var="2 or 4 randomness list"/></block></block><block s="doSetVar"><l>actual</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportListItem"><l>2</l><l/></block></autolambda><list></list></block><block var="2 or 4 randomness list"/></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block s="reportListItem"><l>3</l><block var="expected"/></block><block s="reportListItem"><l>3</l><block var="actual"/></block></list></block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="4. Add 2 or 4" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doDeclareVariables"><list><l>expected</l><l>actual</l></list></block><block s="doSetVar"><l>expected</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportListItem"><l>2</l><l/></block></autolambda><list></list></block><block var="2 or 4 randomness list"/></block></block><block s="doSetVar"><l>actual</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportListItem"><l>2</l><l/></block></autolambda><list></list></block><block var="2 or 4 randomness list"/></block></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><block s="reportVariadicEquals"><list><block s="reportListItem"><l>4</l><block var="expected"/></block><block s="reportListItem"><l>4</l><block var="actual"/></block></list></block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script></block-definition><block-definition s="1. Testing Block %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><l></l></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><block s="reportVariadicGreaterThanOrEquals"><list><block var="function"/><l>1</l></list></block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script><scripts><script x="204.130859375" y="74.66666666666669"><block s="reportNewList"><list><block s="reportNewList"><list><l>1</l><l>1</l></list></block><block s="reportNewList"><list><l>1</l><l>1</l></list></block></list></block></script></scripts></block-definition><block-definition s="2. Testing Block %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><l></l></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><block s="reportVariadicGreaterThanOrEquals"><list><block var="function"/><l>2</l></list></block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script><scripts><script x="270.6416015625" y="122.5"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block></script><script x="272.130859375" y="161.66666666666669"><block s="reportNewList"><list><block s="reportNewList"><list><l>2</l><l>2</l></list></block><block s="reportNewList"><list><l>2</l><l>2</l></list></block></list></block></script></scripts></block-definition><block-definition s="3. Testing Block %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><l></l></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><block s="reportVariadicGreaterThanOrEquals"><list><block var="function"/><l>3</l></list></block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script><scripts><script x="262.6416015625" y="118.5"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block></script><script x="292.130859375" y="157.66666666666669"><block s="reportNewList"><list><block s="reportNewList"><list><l>3</l><l>3</l></list></block><block s="reportNewList"><list><l>3</l><l>3</l></list></block></list></block></script></scripts></block-definition><block-definition s="4. Testing Block %&apos;function&apos;" type="reporter" category="tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>test inputs</l></list></block><block s="doSetVar"><l>test inputs</l><l></l></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doIfElse"><block s="reportVariadicGreaterThanOrEquals"><list><block var="function"/><l>4</l></list></block><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><l>Test failed.</l></list></block></block></script></block></script><l>error</l><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>false</bool></l></block><block var="error"/></list></block></block></script></custom-block></script><scripts><script x="292.6416015625" y="116.5"><custom-block s="%repRing equals solution on %l" scope="local"><block var="function"/><block var="test inputs"/></custom-block></script><script x="293.130859375" y="150.66666666666669"><block s="reportNewList"><list><block s="reportNewList"><list><l>4</l><l>4</l></list></block><block s="reportNewList"><list><l>4</l><l>4</l></list></block></list></block></script></scripts></block-definition></blocks><variables><variable name="tests"><list id="5787"><item><list id="5788"><item><bool>true</bool></item><item><context id="5789"><inputs></inputs><variables></variables><custom-block s="1. Add 2 or 4" scope="local"></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><context id="5793"><inputs></inputs><variables><variable name="run HOFs tests?"><bool>true</bool></variable><variable name="blocks"><list struct="atomic" id="5795"></list></variable><variable name="error"><l>error</l></variable></variables><receiver><ref id="2"></ref></receiver><origin></origin></context></context></item><item><l>1.5</l></item></list></item><item><list id="5796"><item><bool>true</bool></item><item><context id="5797"><inputs></inputs><variables></variables><custom-block s="2. Add 2 or 4" scope="local"></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.5</l></item></list></item><item><list id="5801"><item><bool>true</bool></item><item><context id="5802"><inputs></inputs><variables></variables><custom-block s="3. Add 2 or 4" scope="local"></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.5</l></item></list></item><item><list id="5806"><item><bool>true</bool></item><item><context id="5807"><inputs></inputs><variables></variables><custom-block s="4. Add 2 or 4" scope="local"></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.5</l></item></list></item><item><list id="5811"><item><bool>true</bool></item><item><context id="5812"><inputs></inputs><variables></variables><custom-block s="1. Rotate Clockwise %s" scope="local"><block s="reportListItem"><l>2</l><block var="student"/></block></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.5</l></item></list></item><item><list id="5820"><item><bool>true</bool></item><item><context id="5821"><inputs></inputs><variables></variables><custom-block s="2. Rotate Clockwise %s" scope="local"><block s="reportListItem"><l>2</l><block var="student"/></block></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.5</l></item></list></item><item><list id="5829"><item><bool>true</bool></item><item><context id="5830"><inputs></inputs><variables></variables><custom-block s="3. Rotate Clockwise %s" scope="local"><block s="reportListItem"><l>2</l><block var="student"/></block></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.5</l></item></list></item><item><list id="5838"><item><bool>true</bool></item><item><context id="5839"><inputs></inputs><variables></variables><custom-block s="4. Rotate Clockwise %s" scope="local"><block s="reportListItem"><l>2</l><block var="student"/></block></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.5</l></item></list></item><item><list id="5847"><item><bool>true</bool></item><item><context id="5848"><inputs></inputs><variables></variables><custom-block s="1. Merge Up Column %s" scope="local"><block s="reportListItem"><l>3</l><block var="student"/></block></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.8</l></item></list></item><item><list id="5856"><item><bool>true</bool></item><item><context id="5857"><inputs></inputs><variables></variables><custom-block s="2. Merge Up Column %s" scope="local"><block s="reportListItem"><l>3</l><block var="student"/></block></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.8</l></item></list></item><item><list id="5865"><item><bool>true</bool></item><item><context id="5866"><inputs></inputs><variables></variables><custom-block s="3. Merge Up Column %s" scope="local"><block s="reportListItem"><l>3</l><block var="student"/></block></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.8</l></item></list></item><item><list id="5874"><item><bool>true</bool></item><item><context id="5875"><inputs></inputs><variables></variables><custom-block s="4. Merge Up Column %s" scope="local"><block s="reportListItem"><l>3</l><block var="student"/></block></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>3</l></item></list></item><item><list id="5883"><item><bool>true</bool></item><item><context id="5884"><inputs></inputs><variables></variables><custom-block s="5. Merge Up Column %s" scope="local"><block s="reportListItem"><l>3</l><block var="student"/></block></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>3</l></item></list></item><item><list id="5892"><item><bool>true</bool></item><item><context id="5893"><inputs></inputs><variables></variables><custom-block s="6. Merge Up Column %s" scope="local"><block s="reportListItem"><l>3</l><block var="student"/></block></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.8</l></item></list></item><item><list id="5901"><item><bool>true</bool></item><item><context id="5902"><inputs></inputs><variables></variables><custom-block s="7. Merge Up Column %s" scope="local"><block s="reportListItem"><l>3</l><block var="student"/></block></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.8</l></item></list></item><item><list id="5910"><item><bool>true</bool></item><item><context id="5911"><inputs></inputs><variables></variables><custom-block s="1. Merge Up %s" scope="local"><block s="reportListItem"><l>4</l><block var="student"/></block></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.5</l></item></list></item><item><list id="5919"><item><bool>true</bool></item><item><context id="5920"><inputs></inputs><variables></variables><custom-block s="2. Merge Up %s" scope="local"><block s="reportListItem"><l>4</l><block var="student"/></block></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.5</l></item></list></item><item><list id="5928"><item><bool>true</bool></item><item><context id="5929"><inputs></inputs><variables></variables><custom-block s="3. Merge Up %s" scope="local"><block s="reportListItem"><l>4</l><block var="student"/></block></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.5</l></item></list></item><item><list id="5937"><item><bool>true</bool></item><item><context id="5938"><inputs></inputs><variables></variables><custom-block s="4. Merge Up %s" scope="local"><block s="reportListItem"><l>4</l><block var="student"/></block></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.5</l></item></list></item><item><list id="5946"><item><bool>true</bool></item><item><context id="5947"><inputs></inputs><variables></variables><custom-block s="1. No Moves Left %s" scope="local"><block s="reportListItem"><l>5</l><block var="student"/></block></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.5</l></item></list></item><item><list id="5955"><item><bool>true</bool></item><item><context id="5956"><inputs></inputs><variables></variables><custom-block s="2. No Moves Left %s" scope="local"><block s="reportListItem"><l>5</l><block var="student"/></block></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.5</l></item></list></item><item><list id="5964"><item><bool>true</bool></item><item><context id="5965"><inputs></inputs><variables></variables><custom-block s="3. No Moves Left %s" scope="local"><block s="reportListItem"><l>5</l><block var="student"/></block></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.5</l></item></list></item><item><list id="5973"><item><bool>true</bool></item><item><context id="5974"><inputs></inputs><variables></variables><custom-block s="4. No Moves Left %s" scope="local"><block s="reportListItem"><l>5</l><block var="student"/></block></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.5</l></item></list></item><item><list id="5982"><item><bool>true</bool></item><item><context id="5983"><inputs></inputs><variables></variables><custom-block s="1. Testing Block %s" scope="local"><block var="GRADED TESTS"/></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.5</l></item></list></item><item><list id="5988"><item><bool>true</bool></item><item><context id="5989"><inputs></inputs><variables></variables><custom-block s="2. Testing Block %s" scope="local"><block var="GRADED TESTS"/></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.5</l></item></list></item><item><list id="5994"><item><bool>true</bool></item><item><context id="5995"><inputs></inputs><variables></variables><custom-block s="3. Testing Block %s" scope="local"><block var="GRADED TESTS"/></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.5</l></item></list></item><item><list id="6000"><item><bool>true</bool></item><item><context id="6001"><inputs></inputs><variables></variables><custom-block s="4. Testing Block %s" scope="local"><block var="GRADED TESTS"/></custom-block><receiver><ref id="2"></ref></receiver><origin><ref id="2"></ref></origin><ref id="5793"></ref></context></item><item><l>1.5</l></item></list></item></list></variable><variable name="student"><list id="6006"><item><context id="6007"><inputs></inputs><variables></variables><custom-block s="add 2 or 4 to %l"><l/></custom-block><receiver></receiver><origin></origin></context></item><item><context id="6012"><inputs></inputs><variables></variables><custom-block s="rotate %l clockwise"><l/></custom-block><receiver></receiver><origin></origin></context></item><item><context id="6017"><inputs></inputs><variables></variables><custom-block s="merge up column %n of %l"><l></l><l/></custom-block><receiver></receiver><origin></origin></context></item><item><context id="6023"><inputs></inputs><variables></variables><custom-block s="merge up %l"><l/></custom-block><receiver></receiver><origin></origin></context></item><item><context id="6028"><inputs></inputs><variables></variables><custom-block s="no moves left for %l ?"><l/></custom-block><receiver></receiver><origin></origin></context></item></list></variable><variable name="results"><l>{"gradable":true,"score":0.9666666666666667,"tests":[{"name":"1. Add 2 or 4","points":1.5,"max_points":1.5,"output":"Test passed!"},{"name":"2. Add 2 or 4","points":1.5,"max_points":1.5,"output":"Test passed!"},{"name":"3. Add 2 or 4","points":1.5,"max_points":1.5,"output":"Test passed!"},{"name":"4. Add 2 or 4","points":1.5,"max_points":1.5,"output":"Test passed!"},{"name":"1. Rotate Clockwise","points":1.5,"max_points":1.5,"output":"Test passed!"},{"name":"2. Rotate Clockwise","points":1.5,"max_points":1.5,"output":"Test passed!"},{"name":"3. Rotate Clockwise","points":1.5,"max_points":1.5,"output":"Test passed!"},{"name":"4. Rotate Clockwise","points":1.5,"max_points":1.5,"output":"Test passed!"},{"name":"1. Merge Up Column","points":1.8,"max_points":1.8,"output":"Test passed!"},{"name":"2. Merge Up Column","points":1.8,"max_points":1.8,"output":"Test passed!"},{"name":"3. Merge Up Column","points":1.8,"max_points":1.8,"output":"Test passed!"},{"name":"4. Merge Up Column","points":3,"max_points":3,"output":"Test passed!"},{"name":"5. Merge Up Column","points":3,"max_points":3,"output":"Test passed!"},{"name":"6. Merge Up Column","points":1.8,"max_points":1.8,"output":"Test passed!"},{"name":"7. Merge Up Column","points":1.8,"max_points":1.8,"output":"Test passed!"},{"name":"1. Merge Up","points":1.5,"max_points":1.5,"output":"Test passed!"},{"name":"2. Merge Up","points":1.5,"max_points":1.5,"output":"Test passed!"},{"name":"3. Merge Up","points":1.5,"max_points":1.5,"output":"Test passed!"},{"name":"4. Merge Up","points":1.5,"max_points":1.5,"output":"Test passed!"},{"name":"1. No Moves Left","points":1.5,"max_points":1.5,"output":"Test passed!"},{"name":"2. No Moves Left","points":0,"max_points":1.5,"output":"Test failed."},{"name":"3. No Moves Left","points":1.5,"max_points":1.5,"output":"Test passed!"},{"name":"4. No Moves Left","points":1.5,"max_points":1.5,"output":"Test passed!"},{"name":"1. Testing Block","points":1.5,"max_points":1.5,"output":"Test passed!"},{"name":"2. Testing Block","points":1.5,"max_points":1.5,"output":"Test passed!"},{"name":"3. Testing Block","points":1.5,"max_points":1.5,"output":"Test passed!"},{"name":"4. Testing Block","points":1.5,"max_points":1.5,"output":"Test passed!"}]}</l></variable><variable name="secret number"><l>0</l></variable><variable name="2 or 4 randomness list"><list id="6033"><item><list id="6034"><item><l>add 2 or 4 ONLY adds 2 or 4</l></item><item><bool>true</bool></item><item><bool>true</bool></item><item><l>1</l></item><item><l>1</l></item></list></item><item><list id="6035"><item><l>add 2 or 4 ONLY adds to empty slots</l></item><item><bool>true</bool></item><item><bool>true</bool></item><item><l>1</l></item><item><l>1</l></item></list></item><item><list id="6036"><item><l>add 2 or 4 adds 2 75% of the time</l></item><item><bool>true</bool></item><item><bool>true</bool></item><item><l>1</l></item><item><l>1</l></item></list></item><item><list id="6037"><item><l>add 2 or 4 adds 4 25% of the time</l></item><item><bool>true</bool></item><item><bool>true</bool></item><item><l>1</l></item><item><l>1</l></item></list></item></list></variable><variable name="score"><l>214.50000000000009</l></variable><variable name="max score total"><l>0</l></variable></variables><scripts><comment x="70" y="10" w="408" collapsed="false">Metadata such as &quot;secret number&quot; should have been initialized by the JS autograder script, so they can be treated as ready to use (even though their current value might show &quot;0&quot;).&#xD;&#xD;Make new variables and blocks FOR THIS SPRITE ONLY.&#xD;&#xD;Export this Sprite—not the project!</comment><script x="811.8701953124998" y="683.8333333333331"><block var="test inputs"/></script><script x="730.5782031250001" y="683.8333333333331"><block var="solution"/></script><script x="361" y="148.00000000000009"><block s="receiveMessage"><l>run autograder</l><list></list></block><custom-block s="set up autograder" scope="local"></custom-block><block s="doSetVar"><l>results</l><custom-block s="grade" scope="local"></custom-block></block><block s="doStopThis"><l><option>all</option></l></block></script><script x="777.3173828125" y="65.46666666666675"><block s="reportBoolean"><l><bool>false</bool></l></block></script><script x="762.3173828125" y="609.4666666666665"><block s="reportNewList"><list><block s="reportNewList"><list><l></l></list></block></list></block></script><script x="858.0712890624998" y="585.3"><block s="reportNewList"><list><block s="reportNewList"><list><l></l></list></block></list></block></script><script x="735" y="216.83333333333337"><block s="doIfElse"><l/><script><block s="doReport"><block s="reportNewList"><list><block s="reportBoolean"><l><bool>true</bool></l></block><l>Test passed!</l></list></block></block></script><script></script></block></script><script x="628.2941015625001" y="402.00000000000006"><block var="test inputs"/></script><script x="862.5450781249999" y="468.9999999999998"><block var="secret number"/></script><script x="737.8683984375" y="382.00000000000006"><block s="reportNewList"><list><block s="reportNewList"><list><l>0</l></list></block></list></block></script><script x="779.7901171875001" y="489.1333333333332"><block var="function"/></script><script x="779.7901171875001" y="307.1333333333334"><block s="reportNewList"><list><l>3</l></list></block></script><script x="595" y="437"><block s="reifyScript"><script></script><list></list></block></script><script x="644.0849609375" y="492.9999999999998"><block var="tests"/></script><script x="516.9014453124998" y="564.8333333333331"><block var="results"/></script><script x="373.0849609375" y="500.9999999999998"><custom-block s="grade 2 or 4 randomness %s" scope="local"><l></l></custom-block></script><script x="595.976640625" y="514.9999999999999"><block var="results"/></script><script x="27.75333333333333" y="588.9999999999998"><block s="doDeclareVariables"><list><l>result</l></list></block><block s="doSetVar"><l>result</l><block s="reportFindFirst"><block s="reifyPredicate"><autolambda><block s="reportVariadicEquals"><list><block s="reportBlockAttribute"><l><option>label</option></l><block var="block"/></block><l>tests</l></list></block></autolambda><list><l>block</l></list></block><block s="reportGet"><l><option>blocks</option></l></block></block></block><block s="doReport"><block var="result"/></block></script><script x="30" y="545.9999999999998"><custom-block s="get block %txt" scope="local"><block var="tests"/></custom-block></script><script x="472" y="279.83333333333337"><block s="reportRound"><l></l></block></script><script x="109.83333333333337" y="204.33333333333326"><block var="results"/></script></scripts></sprite></sprites>